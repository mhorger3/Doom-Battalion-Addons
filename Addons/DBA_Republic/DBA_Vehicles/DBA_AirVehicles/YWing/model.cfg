
class CfgSkeletons
{
	class YWing_skeleton
	{
		isDiscrete = 0;
		skeletonInherit = "";
		skeletonBones[] =
		{
			"gear_f",					"",
			"gear_r_r",					"",
			"gear_r_l", 				""			
		};

	
	};
};
class CfgModels
{
	class YWing
	{
		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;	 	
		sectionsInherit = "";
		sections[] =
		{
			"ballgun",
			"body",
			"cockpit",
			"leftwing",
			"r2",
			"rightwing",
		};
		skeletonName = "YWing_skeleton";
		class Animations
		{
			class thrustVector0
			{
				type = "rotation";
				source = "gear";
				selection = "gear_f";
				axis = "axis_gear_rear_r";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.00000;
				angle0 = 0;
				angle1 = -1.57079633;
			};

			class thrustVector1
			{
				type = "rotation";
				source = "gear";
				selection = "gear_r_r";
				axis = "axis_gear_rear_r";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.00000;
				angle0 = 0;
				angle1 = -1.57079633;
			};
			class thrustVector2
			{
				type = "rotation";
				source = "gear";
				selection = "gear_r_l";
				axis = "axis_gear_rear_l";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.00000;
				angle0 = 0;
				angle1 = -1.57079633;
			};
			class zaslehROT
			{
				type="rotationZ";
				source="Muzzle_flash";            //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="zasleh";       //selection we want to rotate
				axis="";                  //no own axis - center of rotation is computed from selection
				centerFirstVertex=true;   //use first vertex of selection as center of rotation
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
			};
		};
	};
};